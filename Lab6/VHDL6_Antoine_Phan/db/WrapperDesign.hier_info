|Antoine_Phan_Wrapper
enable => Antoine_Phan_Clock_Divider:divider.enable
reset => Antoine_Phan_Clock_Divider:divider.reset
reset => Antoine_Phan_Counter:counter.reset
clk => Antoine_Phan_Clock_Divider:divider.clk
clk => Antoine_Phan_Counter:counter.clk
HEX0[0] << Seven_Segment_Decoder:decoder.segment_out[0]
HEX0[1] << Seven_Segment_Decoder:decoder.segment_out[1]
HEX0[2] << Seven_Segment_Decoder:decoder.segment_out[2]
HEX0[3] << Seven_Segment_Decoder:decoder.segment_out[3]
HEX0[4] << Seven_Segment_Decoder:decoder.segment_out[4]
HEX0[5] << Seven_Segment_Decoder:decoder.segment_out[5]
HEX0[6] << Seven_Segment_Decoder:decoder.segment_out[6]


|Antoine_Phan_Wrapper|Antoine_Phan_Clock_Divider:divider
enable => en_out.IN0
enable => en_out~reg0.ENA
enable => count[25].ENA
enable => count[24].ENA
enable => count[23].ENA
enable => count[22].ENA
enable => count[21].ENA
enable => count[20].ENA
enable => count[19].ENA
enable => count[18].ENA
enable => count[17].ENA
enable => count[16].ENA
enable => count[15].ENA
enable => count[14].ENA
enable => count[13].ENA
enable => count[12].ENA
enable => count[11].ENA
enable => count[10].ENA
enable => count[9].ENA
enable => count[8].ENA
enable => count[7].ENA
enable => count[6].ENA
enable => count[5].ENA
enable => count[4].ENA
enable => count[3].ENA
enable => count[2].ENA
enable => count[1].ENA
enable => count[0].ENA
reset => en_out.IN1
clk => en_out~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
en_out <= en_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Antoine_Phan_Wrapper|Antoine_Phan_Counter:counter
enable => count_temp[2].ENA
enable => count_temp[1].ENA
enable => count_temp[0].ENA
reset => count_temp[0].ACLR
reset => count_temp[1].ACLR
reset => count_temp[2].ACLR
clk => count_temp[0].CLK
clk => count_temp[1].CLK
clk => count_temp[2].CLK
count[0] <= count_temp[0].DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count_temp[1].DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count_temp[2].DB_MAX_OUTPUT_PORT_TYPE


|Antoine_Phan_Wrapper|Seven_Segment_Decoder:decoder
code[0] => Mux0.IN19
code[0] => Mux1.IN19
code[0] => Mux2.IN19
code[0] => Mux3.IN19
code[0] => Mux4.IN19
code[0] => Mux5.IN19
code[0] => Mux6.IN19
code[1] => Mux0.IN18
code[1] => Mux1.IN18
code[1] => Mux2.IN18
code[1] => Mux3.IN18
code[1] => Mux4.IN18
code[1] => Mux5.IN18
code[1] => Mux6.IN18
code[2] => Mux0.IN17
code[2] => Mux1.IN17
code[2] => Mux2.IN17
code[2] => Mux3.IN17
code[2] => Mux4.IN17
code[2] => Mux5.IN17
code[2] => Mux6.IN17
code[3] => Mux0.IN16
code[3] => Mux1.IN16
code[3] => Mux2.IN16
code[3] => Mux3.IN16
code[3] => Mux4.IN16
code[3] => Mux5.IN16
code[3] => Mux6.IN16
segment_out[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
segment_out[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segment_out[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segment_out[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segment_out[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segment_out[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
segment_out[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


